import Head from "next/head";
import Header from "../components/Header";
import Footer from "../components/Footer";
import StatCard from "../components/StatCard";
import CryptoNews from "../components/CryptoNews";

export default function Home({ cryptos, news }) {
  console.log(news);
  return (
    <div>
      <Head>
        <title>Crypto Prices</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Header */}
      <Header />

      <main className="py-12 px-8 flex flex-col max-w-[1600px] mx-auto">
        {/* Crypto News */}
        <h1 className="text-3xl text-center pb-12">Featured News</h1>
        <section className="flex pb-12 gap-4 justify-center 2xl:justify-between flex-wrap">
          {news.map((newsItem) => (
            <CryptoNews key={newsItem.link} {...newsItem} />
          ))}
        </section>

        {/* Crypto prices */}
        <h1 className="text-3xl text-left pb-12">Crypto Prices</h1>
        <section className="flex flex-col gap-4">
          {cryptos.map((crypto) => (
            <StatCard key={crypto.asset_id} {...crypto} />
          ))}
        </section>
      </main>

      {/* Footer */}
      <Footer />
    </div>
  );
}

export async function getServerSideProps(context) {
  const cryptosToFetch = [
    "BTC",
    "ETH",
    "USDT",
    "USDC",
    "BNB",
    "XRP",
    "BUSD",
    "ADA",
    "SOL",
    "DOGE",
    "MATIC",
    "DOT",
    "DAI",
    "TRX",
    "SHIB",
    "LINK",
    "AVAX",
    "UNI",
    "LTC",
    "ATOM",
  ];
  const fetchOptions = {
    headers: { "X-CoinAPI-Key": "5CA3F6B3-9623-426B-95D2-62BA9F9FA4A7" },
  };

  const urls = [
    `https://rest.coinapi.io/v1/assets?filter_asset_id=${cryptosToFetch.join(
      ";"
    )}`,
    `https://rest.coinapi.io/v1/assets/icons/64`,
  ];

  const cryptoPrices = await fetch(urls[0], fetchOptions).then((res) =>
    res.json()
  );
  let cryptoIcons = await fetch(urls[1], fetchOptions).then((res) =>
    res.json()
  );
  cryptoIcons = cryptoIcons.filter((crypto) =>
    cryptosToFetch.includes(crypto.asset_id)
  );

  const cryptos = cryptoPrices.map((crypto) => ({
    ...crypto,
    icon:
      cryptoIcons.find(({ asset_id }) => asset_id === crypto.asset_id)?.url ||
      null,
  }));

  const getNews = await fetch(
    "https://newsdata.io/api/1/news?apikey=pub_123320e4370961dbe9c3183dcc2947a4b49db&q=cryptocurrency&language=en"
  ).then((res) => res.json());

  return {
    props: {
      cryptos,
      news: getNews.results.slice(0, 4),
    }, // will be passed to the page component as props
  };
}
